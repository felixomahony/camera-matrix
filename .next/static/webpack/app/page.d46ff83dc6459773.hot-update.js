"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/projection_matrix/pages/page_data.json":
/*!***********************************************************!*\
  !*** ./components/projection_matrix/pages/page_data.json ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

module.exports = /*#__PURE__*/JSON.parse('[{"title":"What is a Camera Matrix?","content":[{"type":"text","data":"The camera matrix is one of the most important concepts in computer vision. It determines the relationship between 3D points in the world and their 2D projections in an image."}]},{"title":"The Camera Projection Equation","content":[{"type":"text","data":"The camera projection equation is the transformation which maps 3D points to the 2D image plane. It is a linear transformation which can be written as:"},{"type":"eqn","url":"/camera_matrix/equations/eqn1.png"},{"type":"text","data":"Where x is the 3D point, y is the 2D point, and P is the camera matrix. The tilde over the points x and y indicate that these are in homogeneous coordinates. What this means, and the reason we do this will become clear later."},{"type":"text","data":"Our camera matrix P is itself a product of two components, the intrinsic matrix K, and the extrinsic matrix [R|T]."},{"type":"eqn","url":"/camera_matrix/equations/eqn2.png"},{"type":"text","data":"Let\'s look more closely at the extrinsic matrix, [R|T]."}]},{"title":"Extrinsics: World to Camera","content":[{"type":"text","data":"The extrinsic matrix maps points from the original coordinate system, where x y and z are measured in a world frame of reference, to a system where their x y and z are measured in the camera frame of reference."},{"type":"text","data":"Converting the points from one reference frame to another involves two steps: translation and rotation."}]},{"title":"Extrinsics: Translation","content":[{"type":"text","data":"Suppose that we have a point in the world, x, and we wish to know its position in the camera coordinate system xₖ. By simple vector addition, the position of the point in camera coordinates is the sum of the position of the origin in the world coordinates oₖ and the vector connecting the origin to the point in the same coordinate frame."},{"type":"eqn","url":"/camera_matrix/equations/eqn3.png"},{"type":"text","data":"The first component of this sum, the position of the origin in camera coordinates, is the translation vector T; the first part of the extrinsic matrix. See how changing the value of T changes the position of the point in camera coordinates."},{"type":"slider","title":"Tx"},{"type":"slider","title":"Ty"},{"type":"slider","title":"Tz"},{"type":"reset"}]},{"title":"Extrinsics: Rotation","content":[{"type":"text","data":"So are we done? We simply take the translation vector and add it to the point in world coordinates, and we have the point in camera coordinates?"},{"type":"text","data":"Not so fast. Recall that we are working in the camera coordinate system. The location of p is given in world coordinates. We still need to rotate the point into the camera coordinate system. However, this is fairly simple. We simply find the rotation matrix R which rotates points from the world coordinate system to camera coordinates."},{"type":"text","data":"Practically speaking, this is given by the orientation of the world axes when viewed in the camera coordinate system. If you could measure the vectors of the world axes x, y, and z in the camera coordinate system, you would form this rotation matrix with these vectors as columns."}]},{"title":"Extrinsics: Rotation","content":[{"type":"text","data":"Adjust the pitch, roll and yaw of the camera to see how the position, and the image, changes."},{"type":"slider","title":"Rx"},{"type":"slider","title":"Ry"},{"type":"slider","title":"Rz"},{"type":"reset"}]},{"title":"Extrinsics: Forming the Matrix","content":[{"type":"text","data":"Now we have all the pieces we need. To find the location of a point in the camera coordinate system, we rotate a given point with a rotation matrix R, and then translate it with the translation vector T:"},{"type":"eqn","url":"/camera_matrix/equations/eqn4.png"},{"type":"text","data":"We can write this more compactly via the extrinsic matrix [R|T]:"},{"type":"eqn","url":"/camera_matrix/equations/eqn5.png","hgt":"2.7rem"},{"type":"text","data":"Where the tilde over the points indicates that we have appended [1] to the end of the vector. You can verify that this is the same as the previous equation."}]},{"title":"Extrinsics: Practical Considerations","content":[{"type":"text","data":"However, in reality we typically set the location and rotation of the camera in the world coordinate system, not the other way around."},{"type":"text","data":"Fortunately, the two matrices are separated by a simple inverse operation. Given the location and rotation of the camera in the world coordinate system, the location and rotation in the camera frame is given by:"}]},{"title":"Extrinsics: Sandbox","content":[{"type":"text","data":"Try adjusting the camera rotation and translation to see how the extrinsics change."},{"type":"slider","title":"Rcx"},{"type":"slider","title":"Rcy"},{"type":"slider","title":"Rcz"},{"type":"slider","title":"Tcx"},{"type":"slider","title":"Tcy"},{"type":"slider","title":"Tcz"},{"type":"reset"}]},{"title":"Intrinsics","content":[{"type":"text","data":"The intrinsic matrix, K, is the second half of the camera matrix. We now have the location of any given point in the camera coordinate system. Now we need to project this point onto the image plane."},{"type":"text","data":"Projection is the process of converting rays to points. Any point which lies on a ray emanating from the camera center will project to the point of intersection of the ray with the image plane. The equation for this projection operation is given by the equation of a ray:"}]},{"title":"Intrinsics: Focal Length","content":[{"type":"text","data":"The first component to address in this equation is the focal length. The focal length defines the distance from the camera center to the image plane."},{"type":"text","data":"A more intuitive way to think about the focal length of the camera is that it defines the field of view of the camera. If the focal length is large, then a smaller solid angle is captured on the image plane, resulting in a smaller field of view."},{"type":"slider","title":"f"}]},{"title":"Intrinsics: Camera Center","content":[{"type":"text","data":"The other part of the projection equation is the camera center. This is the point on the image plane which is the projection of the camera center."},{"type":"text","data":"If we move the camera center to the left, all points will also appear to move to the left on the image plane. Similarly, if we move the camera center up, points will appear to move up on the image plane."},{"type":"slider","title":"cx"},{"type":"slider","title":"cy"}]},{"title":"Intrinsics: Putting it Together","content":[{"type":"text","data":"We can write the projection equation more compactly with the intrinsic matrix K:"},{"type":"text","data":"The equation yields the homogeneous point on the image plane, y, given the 3D point in camera coordinates, xₖ."},{"type":"text","data":"Note the tilde, again indicating that y is in homogeneous coordinates. To map back to inhomogeneous coordinates, we can simply divide the first two values by the third. You can verify this is the same as the projection equation described earlier."}]}]');

/***/ })

});